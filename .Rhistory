library("limma");
install.packages("limma")
.libPaths
.libPaths()
library("limma")
packages()
environmentName()
install.packages("limma")
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
source("http://bioconductor.org/biocLite.R")
biocLite("Limma")
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
source("http://bioconductor.org/biocLite.R")
biocLite("limma")
install.packages("limma")
install.packages("limma")
args<- as.list(args);
#initialize arguments if
initializeBooleanArg <- function(arg, default){
if(is.null(arg))
{
arg <- default;
} else if(is.character(arg))
{
arg <- as.logical(arg);
}
return(arg);
}
args$diffCoexFlag <- initializeBooleanArg(arg=args$diffCoexFlag, default=TRUE);
args$diffExprsFlag <- initializeBooleanArg(arg=args$diffExprsFlag, default=FALSE);
args$normFlagRPKM <- initializeBooleanArg(arg=args$normFlagRPKM, default=TRUE);
args$normFlagUbi <- initializeBooleanArg(arg=args$normFlagUbi, default=TRUE);
args$normFlagDESeq <- initializeBooleanArg(arg=args$normFlagDESeq, default=TRUE);
args$normFlagQuant <- initializeBooleanArg(arg=args$normFlagQuant, default=TRUE);
args$QCFlag <- initializeBooleanArg(arg=args$QCFlag, default=FALSE);
args$dataFromRDS <- initializeBooleanArg(arg=args$dataFromRDS, default=FALSE);
args$saveNormalizationRDS <- initializeBooleanArg(arg=args$saveNormalizationRDS, default=FALSE);
args<- as.list(args);
#initialize arguments if
initializeBooleanArg <- function(arg, default){
if(is.null(arg))
{
arg <- default;
} else if(is.character(arg))
{
arg <- as.logical(arg);
}
return(arg);
}
args$diffCoexFlag <- initializeBooleanArg(arg=args$diffCoexFlag, default=TRUE);
args$diffExprsFlag <- initializeBooleanArg(arg=args$diffExprsFlag, default=FALSE);
args$normFlagRPKM <- initializeBooleanArg(arg=args$normFlagRPKM, default=TRUE);
args$normFlagUbi <- initializeBooleanArg(arg=args$normFlagUbi, default=TRUE);
args$normFlagDESeq <- initializeBooleanArg(arg=args$normFlagDESeq, default=TRUE);
args$normFlagQuant <- initializeBooleanArg(arg=args$normFlagQuant, default=TRUE);
args$QCFlag <- initializeBooleanArg(arg=args$QCFlag, default=FALSE);
args$dataFromRDS <- initializeBooleanArg(arg=args$dataFromRDS, default=FALSE);
args$saveNormalizationRDS <- initializeBooleanArg(arg=args$saveNormalizationRDS, default=FALSE);
print("Importing data files.");
maDir <- "Data/BRCA/Batch 47/Expression-Genes/UNC__AgilentG4502A_07_3/Level_3/";
rsDir <- "Data/BRCA/Batch 47/RNASeqV2/UNC__IlluminaHiSeq_RNASeqV2/Level_3/";
#Metadata
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE,sep="\t");
metaData <- cbind(metaData, control=(substr(x=metaData[,5],start=14,stop=16)=='11'));#addControl bool
metaData[,6] <- gsub(pattern="-",replacement=".", x=metaData[,6]);#replace '-' with '.' to make mapping easier later
setwd("..")
#import data
print("Importing data files.");
maDir <- "Data/BRCA/Batch 47/Expression-Genes/UNC__AgilentG4502A_07_3/Level_3/";
rsDir <- "Data/BRCA/Batch 47/RNASeqV2/UNC__IlluminaHiSeq_RNASeqV2/Level_3/";
#Metadata
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE,sep="\t");
metaData <- cbind(metaData, control=(substr(x=metaData[,5],start=14,stop=16)=='11'));#addControl bool
metaData[,6] <- gsub(pattern="-",replacement=".", x=metaData[,6]);#replace '-' with '.' to make mapping easier later
Data <- readRDS("normalization.RDS");
condition=c(rep(x="control",times=Data$conCount), rep(x="cancer", times=Data$canCount));
combn <- factor(paste(pData(phenoData)[,1], pData(phenoData)[,2], sep = "_"));
library("limma");
combn <- factor(paste(pData(phenoData)[,1], pData(phenoData)[,2], sep = "_"));
design <- model.matrix(~condition);# describe model to be fit
fit <- lmFit(Data$ma, design);# fit each probeset to model
efit <- eBayes(fit);# empirical Bayes adjustment
head(efit[order(efit$p.value[,2])])
head(efit$p.value)
head(efit$p.value[order(efit$p.value[,2])])
head(efit$p.value[order(efit$p.value[,2]),])
name <- "COL10A1"
Data$ma[name,]
con_Avg <- mean(Data$ma[name,CON])
CON <- 1:6
CAN <- 7:97
con_Avg <- mean(Data$ma[name,CON])
can_Avg <- mean(Data$ma[name,CAN])
con_Std <- sqrt(var(Data$ma[name,CON]))
can_Std <- sqrt(var(Data$ma[name,CAN]))
var(Data$ma[name,CON])
Data$ma[name,CON]
mode(Data$ma[name,CON])
con_Avg <- mean(Data$ma[[name,CON]])
Data$ma[[name,CON]]
Data$ma[[name,CON]]
Data$ma[name]
Data$ma[name,]
con_Avg <- mean(Data$ma[name,CON])
can_Avg <- mean(Data$ma[name,CAN])
Data$ma[name,CON]
unlist(Data$ma[name,CON])
mean(unlist(Data$ma[name,CON]))
con_Avg <- mean(unlist(Data$ma[name,CON]))
can_Avg <- mean(unlist(Data$ma[name,CAN]))
con_Std <- sqrt(unlist(var(Data$ma[name,CON])))
can_Std <- sqrt(unlist(var(Data$ma[name,CAN])))
con_Std <- sqrt(var(unlist(Data$ma[name,CON])))
can_Std <- sqrt(var(unlist(Data$ma[name,CAN])))
log2(can_Avg/con_Avg)
head(efit)
head(topTable(efit, coef=2, number=length(efit$p.value))[,1]);
head(topTable(efit, coef=2, number=length(efit$p.value)));
topTable(efit, coef=2, number=length(efit$p.value))[name,1];
log2(can_Avg/con_Avg)
plot(y=-log(efit$p.value[,2],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1])
plot(y=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1])
plot(y=-log(res$pvalue,base=10),x=res$log2FoldChange)
hist(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<0.01,5],breaks=500)
hist(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5],breaks=500)
ls
hist(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<0.01,5],breaks=500)
hist(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5],breaks=500)
plot(y=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1])
plot(y=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1],ylab="-log10(p-value)",xlab="Fold-change",main"Microarray (limma) volcano")
plot(y=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1],ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano")
plot(y=-log(res$pvalue,base=10),x=res$log2FoldChange,ylab="-log10(p-value)",xlab="Fold-change",main="RNASeq (DESeq) volcano")
biocLite("DESeq2");
library("DESeq2");
colData <- DataFrame(condition=c(rep(x="control",times=Data$conCount), rep(x="cancer", times=Data$canCount)), type=c(rep(x="single-read",times=Data$conCount+Data$canCount)));
dds <- DESeqDataSetFromMatrix(countData=matrix(data=mapply(x=as.matrix(Data$rs_raw), FUN=as.integer),nrow = dim(Data$rs_raw)[1],ncol=dim(Data$rs_raw)[2],dimnames = list(row.names(Data$rs_raw), colnames(Data$rs_raw))), design = ~ condition,colData=colData);
dds <- DESeq(dds);
dds$condition <- factor(dds$condition, levels=c("cancer","control"));
res <- results(dds);
plot(y=-log(res$pvalue,base=10),x=res$log2FoldChange,ylab="-log10(p-value)",xlab="Fold-change",main="RNASeq (DESeq) volcano")
plot(y=-log(res$pvalue,base=10),x=-res$log2FoldChange,ylab="-log10(p-value)",xlab="Fold-change",main="RNASeq (DESeq) volcano")
hist(res$pvalue[res$pvalue<1],breaks=500)
topTable(efit, coef=2, number=length(efit$p.value))
topTable(efit, coef=2, number=10)
hist(log(-res$log2FoldChange,base=10),breaks=500)
hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),breaks=500)
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=500)
warnings()
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=200)
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=100)
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=80)
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=80)
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=100)
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=400)
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=120)
hist(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5],breaks=500)
hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5]),breaks=500)
hist <- hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5]),breaks=500)
plot(hist)
plot(y=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1],ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano")
hist <- hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5]),breaks=500)
plot(hist)
plot(y=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1],ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano")
hist <- hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5]),breaks=500,plot=FALSE)
plot(hist)
plot(hist,ylab="Frequency",xlab="-log(p-value)",main="Microarray (limma) -log(p-value) distribution")
plot(hist,ylab="Count",xlab="-log(p-value)",main="Microarray (limma) -log(p-value) distribution")
plot(hist,ylab="Frequency(Count)",xlab="-log(p-value)",main="Microarray (limma) -log(p-value) distribution")
source("CoexpressionNetworkProject/plot2Groups.R");
source("plot2Groups.R");
source("../CoexpressionNetworkProject/plot2Groups.R");
source("CoexpressionNetworkRProject/plot2Groups.R");
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=log(topTable(efit, coef=2, number=length(efit$p.value))[,5])
))))
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=log(topTable(efit, coef=2, number=length(efit$p.value))[,5])))
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=log(topTable(efit, coef=2, number=length(efit$p.value))[,5]))
dev.off()
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=log(topTable(efit, coef=2, number=length(efit$p.value))[,5]),byRow=TRUE,ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png")
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5]),byRow=TRUE,ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png")
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5]),byRow=TRUE,ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE)
source("CoexpressionNetworkRProject/plot2Groups.R");
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5]),byRow=TRUE,ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
source("CoexpressionNetworkRProject/plot2Groups.R");
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5]),byRow=TRUE,ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=topTable(efit, coef=2, number=length(efit$p.value))[,5])byRow=TRUE,ylab="p-value",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
plot2Groups(GroupA=log(topTable(efit, coef=2, number=length(efit$p.value)))[,1],GroupB=topTable(efit, coef=2, number=length(efit$p.value))[,5],byRow=TRUE,ylab="p-value",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
head(topTable(efit, coef=2, number=length(efit$p.value)))
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="p-value",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
ls
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
source("CoexpressionNetworkRProject/plot2Groups.R");
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
source("CoexpressionNetworkRProject/plot2Groups.R");
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
hist <- hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5]),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log(p-value)",main="Microarray (limma) -log(p-value) distribution")
hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=120)
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
hist <- hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5]),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log(p-value)",main="Microarray (limma) -log(p-value) distribution")
hist <- hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="-log(p-value)",main="Microarray (limma) -log(p-value) distribution")
hist <- hist(-log(topTable(efit, coef=2, number=length(efit$p.value))[topTable(efit, coef=2, number=length(efit$p.value))[,5]<1,5]),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log(p-value)",main="Microarray (limma) -log(p-value) distribution")
hist <- hist(log(topTable(efit, coef=2, number=length(efit$p.value))[,1],base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main="Microarray (limma) log10(Fold-change) distribution")
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
plot2Groups(GroupA=topTable(efit, coef=2, number=length(efit$p.value))[,1],GroupB=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main="Microarray (limma) volcano",file="Microarray Volcano.png",histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
plot(y=-log(topTable(efit, coef=2, number=length(efit$p.value))[,5],base=10),x=topTable(efit, coef=2, number=length(efit$p.value))[,1],ylab="-log10(p-value)",xlab="Fold-change",main="Microarray (limma) volcano")
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots <- function(pVals, fcVals, mainPrefix)
{
#this doesn't look right
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
plot2Groups(GroupA=fcVals,GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
}
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
head(pVals)
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
plot2Groups(GroupA=fcVals,GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
topTable(efit, coef=2, number=length(efit$p.value))
topTable(efit, coef=2)
? topTable
head(res$pvalue)^2
head(res$pvalue)
log(head(res$pvalue)^2,base=2)
2^head(res$pvalue)
log(2^head(res$pvalue),base=2)
topTable(efit, coef=2)
topTable(efit, coef=2)[[,1]]
topTable(efit, coef=2)[,1]
2^topTable(efit, coef=2)[,1]
marginalVolcanoPlots <- function(pVals, fcVals, mainPrefix)
{
#this doesn't look right
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
png(filename=paste0(mainPrefix,"pValDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.off();
hist <- hist(log(fcVals,base=10),breaks=120)
png(filename=paste0(mainPrefix,"fcDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off();
plot2Groups(GroupA=fcVals,GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="Fold-change",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
}
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
pVals <- res$pvalue
fcVals <- 2^res$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
marginalVolcanoPlots <- function(pVals, fcVals, mainPrefix)
{
#this doesn't look right
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
png(filename=paste0(mainPrefix,"pValDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.off();
hist <- hist(log(fcVals,base=10),breaks=120)
png(filename=paste0(mainPrefix,"fcDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off();
plot2Groups(GroupA=log(fcVals,base=10),GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="log(Fold-change)",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
}
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
pVals <- res$pvalue
fcVals <- 2^res$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
pVals <- res$pvalue
which(is.na(pVals))
head(pVals)
pVals <- res$padj
head(pVals)
res
res[res$padj>0]
res[!is.na(res.padj)]
res[!is.na(res.padj),]
!is.na(res.padj)
!is.na(res$padj)
res[!is.na(res$padj),]
pVals <- res[!is.na(res$padj),]$padj
fcVals <- 2^res[!is.na(res$padj),]$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
dev.off()
dev.off()
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
pVals <- res[!is.na(res$padj),]$padj
fcVals <- 2^res[!is.na(res$padj),]$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
dev.off(0)
def.off()
dev.off()
dev.off()
marginalVolcanoPlots <- function(pVals, fcVals, mainPrefix)
{
#this doesn't look right
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
png(filename=paste0(mainPrefix,"pValDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.off();
hist <- hist(log(fcVals,base=10),breaks=120)
png(filename=paste0(mainPrefix,"fcDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off();
plot2Groups(GroupA=log(fcVals,base=10),GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="log(Fold-change)",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
dev.off();
}
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
pVals <- res[!is.na(res$padj),]$padj
fcVals <- 2^res[!is.na(res$padj),]$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
dev.off();
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
dev.list()
hist <- hist(log(fcVals,base=10),breaks=120)
png(filename=paste0(mainPrefix,"fcDist.png"));
dev.list()
dev.set(2)
dev.list()
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.set(3)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.set(4)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off(which=c(3,4))
dev.off(which=3
)
dev.off(4)
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
dev.list()
png(filename=paste0(mainPrefix,"pValDist.png"));
dev.list()
png(filename=paste0(mainPrefix,"fcDist.png"));
dev.list()
dev.off()
dev.off()
dev.off()
layout(matrix(c(3,1,1,1,3,1,1,1,3,1,1,1,4,2,2,2), 4, 4, byrow = TRUE));
dev.list()
dev.off()
dev.list()
png(filename=file);
png(filename=paste0(mainPrefix,"fcDist.png"));
layout(matrix(c(3,1,1,1,3,1,1,1,3,1,1,1,4,2,2,2), 4, 4, byrow = TRUE));
dev.list()
plot(x=GroupA, y=GroupB, main=main,xlab=xlab,ylab=ylab, type="n");
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.list()
dev.off()
dev.list()
ls
dev.list()
source("CoexpressionNetworkRProject/plot2Groups.R");
marginalVolcanoPlots <- function(pVals, fcVals, mainPrefix)
{
#this doesn't look right
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
png(filename=paste0(mainPrefix,"pValDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.off();
hist <- hist(log(fcVals,base=10),breaks=120)
png(filename=paste0(mainPrefix,"fcDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off();
plot2Groups(GroupA=log(fcVals,base=10),GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="log(Fold-change)",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
dev.off();
}
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
dev.list()
pVals <- res[!is.na(res$padj),]$padj
fcVals <- 2^res[!is.na(res$padj),]$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
dev.list()
marginalVolcanoPlots <- function(pVals, fcVals, mainPrefix)
{
#this doesn't look right
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
png(filename=paste0(mainPrefix,"pValDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.off();
hist <- hist(log(fcVals,base=10),breaks=120)
png(filename=paste0(mainPrefix,"fcDist.png"));
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off();
plot2Groups(GroupA=log(fcVals,base=10),GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="log(Fold-change)",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
}
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
dev.list()
dev.off()
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
marginalVolcanoPlots <- function(pVals, fcVals, mainPrefix)
{
#this doesn't look right
png(filename=paste0(mainPrefix,"pValDist.png"));
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.off();
png(filename=paste0(mainPrefix,"fcDist.png"));
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off();
plot2Groups(GroupA=log(fcVals,base=10),GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="log(Fold-change)",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
}
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
png(filename=paste0(mainPrefix,"pValDist.png"));
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.off();
png(filename=paste0(mainPrefix,"fcDist.png"));
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.off();
plot2Groups(GroupA=log(fcVals,base=10),GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="log(Fold-change)",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
dev.list()
pVals <- res[!is.na(res$padj),]$padj
fcVals <- 2^res[!is.na(res$padj),]$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
png(filename=paste0(mainPrefix,"pValDist.png"));
dev.list()
hist <- hist(-log(pVals,base=10),breaks=500,plot=FALSE)
plot(hist,ylab="Frequency(Count)",xlab="-log10(p-value)",main=paste0(mainPrefix, " -log10(p-value) distribution"))
dev.list()
dev.off();
png(filename=paste0(mainPrefix,"fcDist.png"));
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
dev.list()
dev.off();
plot2Groups(GroupA=log(fcVals,base=10),GroupB=-log(pVals,base=10),byRow=TRUE,ylab="-log(p-value) ",xlab="log(Fold-change)",main=paste0(mainPrefix," volcano"),file=paste0(mainPrefix,"_Volcano.png"),histA=TRUE,histB=TRUE,breaksA=120,breaksB=120)
dev.off()
source("CoexpressionNetworkRProject/plot2Groups.R");
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
pVals <- res[!is.na(res$padj),]$padj
fcVals <- 2^res[!is.na(res$padj),]$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
marginalVolcanoPlots(pVals, fcVals, mainPrefix);
mean(fcVals)
max(fcVal)
max(fcVals)
max(hist$counts)
log10(x=max(fcVals))
log10(x=mean(fcVals))
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
lines(x=rep(x=log10(x=mean(fcVals)),times=2),y=c(0,max(hist$counts)),col="Red")
pVals <- topTable(efit, coef=2, number=length(efit$p.value))[,5];
fcVals <- 2^topTable(efit, coef=2, number=length(efit$p.value))[,1];
mainPrefix <- "Microarray (limma)";
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
lines(x=rep(x=log10(x=mean(fcVals)),times=2),y=c(0,max(hist$counts)),col="Red")
pVals <- res[!is.na(res$padj),]$padj
fcVals <- 2^res[!is.na(res$padj),]$log2FoldChange
mainPrefix <- "RNASeq (DESeq)";
dev.off();
dev.off();
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
lines(x=rep(x=log10(x=mean(fcVals)),times=2),y=c(0,max(hist$counts)),col="Red")
dev.off();
hist <- hist(log(fcVals,base=10),breaks=120)
plot(hist,ylab="Frequency(Count)",xlab="log10(Fold-change)",main=paste0(mainPrefix," log10(Fold-change) distribution"))
lines(x=rep(x=mean(log10(x=fcVals)),times=2),y=c(0,max(hist$counts)),col="Red")
