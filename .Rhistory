rsPearson_raw_hist <- hist(x=rsPearson_raw,breaks=100,plot=FALSE);
rm(rsPearson_Ubi);
rm(rsPearson_raw);
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts, type='l', col="BLACK", lwd=2)
rsRPKMData <- constructCrossSampleFrame(inFiles=rsfiles,cols2Ignore=c(2,3));
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE);
metaData <- cbind(metaData, control=(substr(x=metaData[,5],start=14,stop=16)=='11'));#addControl bool
metaData[,6] <- gsub(pattern="-",replacement=".", x=metaData[,6]);#replace '-' with '.' to make mapping easier later
rsControlFiles <- paste(sep='', rsDir ,as.character(metaData[metaData[,"control"] & metaData[,"PlatformType"]=="RNASeqV2" & grepl(x=metaData[,"FileName"], pattern="*.rsem.genes.results") ,"FileName"]));
rsCancerFiles <- paste(sep='', rsDir ,as.character(metaData[!metaData[,"control"] & metaData[,"PlatformType"]=="RNASeqV2" & grepl(x=metaData[,"FileName"], pattern="*.rsem.genes.results") ,"FileName"]));
rsControlFiles
rsRPKMData <- constructCrossSampleFrame(inFiles=c(rsControlFiles,rsCancerFiles),cols2Ignore=c(2,3));
warnings()
rsRPKMData[1:3,1:3]
rsRPKMData[10:13,10:13]
rsRPKMData[100:103,100:103]
rsRPKMData[100:103,1:3]
source("http://bioconductor.org/biocLite.R")
biocLite("easyRNASeq")
library("easyRNASeq")
countData(1:2,1:2)
countData[1:2,1:2]
rsRPKM <- RPKM(obj=countData);
genomicAnnotation(obj=countData)
hg19GeneLengths <- function(symbols)
{
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
exons.db = exonsBy(TxDb.Hsapiens.UCSC.hg19.knownGene, by='gene')
egs    = unlist(  mget(symbols[ symbols %in% keys(org.Hs.egSYMBOL2EG) ],org.Hs.egSYMBOL2EG) )
sapply(egs,function(eg)
{
exons = exons.db[[eg]]
exons = reduce(exons)
sum( width(exons) )
})
}
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
source("TxDb.Hsapiens.UCSC.hg19.knownGene")
biocLite("TxDb.Hsapiens.UCSC.hg19.knownGene")
biocLite("org.Hs.eg.db")
hg19GeneLengths <- function(symbols)
{
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
exons.db = exonsBy(TxDb.Hsapiens.UCSC.hg19.knownGene, by='gene')
egs    = unlist(  mget(symbols[ symbols %in% keys(org.Hs.egSYMBOL2EG) ],org.Hs.egSYMBOL2EG) )
sapply(egs,function(eg)
{
exons = exons.db[[eg]]
exons = reduce(exons)
sum( width(exons) )
})
}
hg19GeneLengths( c('STAT1','CXCL10','ACTB','PDCD1') )
hg19GeneLengths( c('STAT1','CXCL10','ACTB','PDCD1') )
a <- matrix(data=c(40,25,100,200,50,40),nrow=3, ncol=2)
a
a / c(2,3)
apply(x=z,MARGIN=1,FUN=Sum)
apply(x=z,MARGIN=1,FUN=sum)
apply(x=1,MARGIN=1,FUN=sum)
apply(x=a,MARGIN=1,FUN=sum)
apply(X=a,MARGIN=1,FUN=sum)
a
a/ apply(x=a,MARGIN=1,FUN=sum)
a/ apply(X=a,MARGIN=1,FUN=sum)
apply(X=a,MARGIN=1,FUN=sum)
c(2, 3) ** c(1,1,1)
c(2, 3) * c(1,1,1)
c(2, 3) %*% c(1,1,1)
c(1, 1,1)
x <- 1:4
(z <- x %*% x)    # scalar ("inner") product (1 x 1 matrix)
drop(z)             # as scalar
y <- diag(x)
z <- matrix(1:12, ncol = 3, nrow = 4)
y %*% z
y %*% x
x %*% z
x
hg19GeneLengths( c('STAT1','CXCL10','ACTB','PDCD1') )
rm(x,y,z,)
rm(x,y,z)
x
z
a
a <- matrix(data=c(100,50,100,150),nrow=2)
a <- matrix(data=c(100,50,100,150),nrow=2,ncol=2)
a
row.names(a) <- C("STAT1","CXCL10")
row.names(a) <- factor(C("STAT1","CXCL10"))
row.names(a) <- factor("STAT1","CXCL10")
row.names(a) <- factor(vector("STAT1","CXCL10")
)
a
row.names(a)
names(a)
mode(a)
mode(countData)
head(row.names(countData))
row.names(a) <- vector("STAT1","CXCL10")
row.names(a) <- vector(length=2)
a
row.names(a)
row.names(a) <- c("STAT1", "CXCL10")
a
rpkm(a)
rpkm <- function(expMatrix)
{
lengths <- hg19GeneLengths(row.names(expMatrix));
rpkmMat <- 10^9 * expMatrix / lengths;
rpkmMat <- rpkm %/% apply(X=expMatrix,MARGIN=1,FUN=sum)
return(rpkmMat)
}
return(rpkmMat)
rpkm(a)
expMatrix <- a
lengths <- hg19GeneLengths(row.names(expMatrix));
rpkmMat <- 10^9 * expMatrix / lengths;
lengths
rpkmMat
rpkmMat %/% apply(X=expMatrix,MARGIN=1,FUN=sum)
apply(X=expMatrix,MARGIN=1,FUN=sum)
apply(X=expMatrix,MARGIN=2,FUN=sum)
rpkmMat %/% apply(X=expMatrix,MARGIN=2,FUN=sum)
rpkmMat %/% t(apply(X=expMatrix,MARGIN=2,FUN=sum))
apply(X=rpkmMat,MARGIN=2,FUN=function(x){x/apply(X=expMatrix,MARGIN=2,FUN=sum)}
)
warnings()
apply(X=rpkmMat,MARGIN=2,FUN=function(x){x/sum(x))}
apply(X=rpkmMat,MARGIN=2,FUN=function(x){x/sum(x)})
apply(X=rpkmMat,MARGIN=2,FUN=function(x){print(x)})
apply(X=rpkmMat,MARGIN=2,FUN=function(x){return(x/sum(x))})
expMatrix <- a
rpkmMat <- apply(X=expMatrix,MARGIN=2,FUN=function(x){return(x/sum(x))})
rpkm
rpkmMat
lengths
10^9 * rpkmMat / lengths;
remove(a,lengths,rpkmMat)
hg19GeneLengths <- function(symbols)
{
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
exons.db = exonsBy(TxDb.Hsapiens.UCSC.hg19.knownGene, by='gene')
egs    = unlist(  mget(symbols[ symbols %in% keys(org.Hs.egSYMBOL2EG) ],org.Hs.egSYMBOL2EG) )
sapply(egs,function(eg)
{
exons = exons.db[[eg]]
exons = reduce(exons)
sum( width(exons) )
})
}
rpkm <- function(expMatrix)
{
#RPKM = (10^9 * C)/(N * L), with
#C = Number of reads mapped to a gene
#N = Total mapped reads in the experiment
#L = gene length in base-pairs for a gene
lengths <- hg19GeneLengths(row.names(expMatrix));
rpkmMat <- apply(X=expMatrix,MARGIN=2,FUN=function(x){return(x/sum(x))})
rpkmMat <- 10^9 * rpkmMat / lengths;
return(rpkmMat);
}
rsRPKM <- rpkm(countData);
expMatrix <- countData
lengths <- hg19GeneLengths(row.names(expMatrix));
head(row.names(expMatrix))
symbols <- row.names(expMatrix)
exons.db = exonsBy(TxDb.Hsapiens.UCSC.hg19.knownGene, by='gene')
egs    = unlist(  mget(symbols[ symbols %in% keys(org.Hs.egSYMBOL2EG) ],org.Hs.egSYMBOL2EG) )
sapply(egs,function(eg)
{
exons = exons.db[[eg]]
exons = reduce(exons)
sum( width(exons) )
})
x <- IRanges(start=c(2:-1, 13:15), width=c(0:3, 2:0))
x
length(x)
start(x)
width(x)
end(x)
reduce(x)
reduce("NULL")
reduce(NULL)
is.na(NULL)
NULL=NULL
NULL==NULL
if(NULL==NULL){print("yes")}
is.na(NA)
is.null(NULL)
hg19GeneLengths <- function(symbols)
{
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
exons.db = exonsBy(TxDb.Hsapiens.UCSC.hg19.knownGene, by='gene')
egs    = unlist(  mget(symbols[ symbols %in% keys(org.Hs.egSYMBOL2EG) ],org.Hs.egSYMBOL2EG) )
sapply(egs,function(eg)
{
exons = exons.db[[eg]]
if(is.null(exons))
{return 0}
exons = reduce(exons)
sum( width(exons) )
})
}
hg19GeneLengths <- function(symbols)
{
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(org.Hs.eg.db)
exons.db = exonsBy(TxDb.Hsapiens.UCSC.hg19.knownGene, by='gene')
egs    = unlist(  mget(symbols[ symbols %in% keys(org.Hs.egSYMBOL2EG) ],org.Hs.egSYMBOL2EG) )
sapply(egs,function(eg)
{
exons = exons.db[[eg]]
if(is.null(exons))
{return (0)}
exons = reduce(exons)
sum( width(exons) )
})
}
exons = exons.db[[eg]]
sapply(egs,function(eg)
{
exons = exons.db[[eg]]
if(is.null(exons))
{return (0)}
exons = reduce(exons)
sum( width(exons) )
})
head(egs)
as.numeric(head(egs))
warnings()
as.numeric(head(egs))
lengths <- as.numeric(egs)
sum(lengths)
which(lengths==NULL)
rpkmMat <- apply(X=expMatrix,MARGIN=2,FUN=function(x){return(x/sum(x))})
rpkmMat <- 10^9 * rpkmMat / lengths;
dim(rpkmMat)
dim(lengths)
length(lengths)
head(names(lengths))
head(row.names(lengths))
head(lengths)
head(egs)
expmatrix <- countData[row.names(egs)]
head(expm)
head(expmatrix)
rm(expmatrix)
expMatrix <- countData[row.names(egs),]
dim(expMatrix)
row.names(egs)
row.names(egs)
row.names(egs)
row.names(egs)
row.names(egs)
head(names(egs))
expMatrix <- countData[names(egs),]
head(countData)
expMatrix <- countData[names(egs[1]),]
expMatrix
expMatrix <- countData[names(egs),]
I<- intersect(names(egs),row.names(countData))
length(I)
head(I)
expMatrix <- countData[I,]
lengths <- egs[I]
rpkmMat <- apply(X=expMatrix,MARGIN=2,FUN=function(x){return(x/sum(x))})
rpkmMat <- 10^9 * rpkmMat / lengths;
head(rpkmMat)
dim(rpkmMat)
length(lengths)
rpkmMat <- 10^9 * rpkmMat
rpkmMat <- rpkmMat / lengths;
mode(lengths)
rpkmMat <- rpkmMat / as.numeric(lengths);
head(rpkmMat)
head(countData)
rsRPKM<-rpkmMat
rm(rpkmMat)
rsData_RPKM <- rsRPKM
rsPearson_RPKM <- cor(x=t(rsData_RPKM), method="pearson", use="complete.obs");
rsPearson_RPKM_hist <- hist(x=rsPearson_RPKM,breaks=100,plot=FALSE);
rm(rsPearson_RPKM);
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts, type='l', col="ORANGE", lwd=2)
sum(rsPearson_RPKM_hist)
sum(rsPearson_RPKM_hist$counts)
sum(rsPearson_raw_hist$counts)
sum(rsPearson_DESeq_hist$counts)
maxy <- max(maPearson_hist$counts,rsPearson_DESeq_hist$counts,rsPearson_quant_hist$counts,rsPearson_Ubi_hist$counts,rsPearson_raw_hist$counts,rsPearson_RPKM_hist$counts)
plot(x=maPearson_hist$mids,y=maPearson_hist$counts/sum(maPearson_hist$counts), type='l', col="RED", lwd=2, ylim=c(0,maxy));
lines(x=rsPearson_DESeq_hist$mids,y=rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts), type='l', col="BLUE", lwd=2);
lines(x=rsPearson_quant_hist$mids,y=rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts), type='l', col="Purple", lwd=2);
lines(x=rsPearson_Ubi_hist$mids,y=rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts), type='l', col="GREEN", lwd=2)
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts), type='l', col="BLACK", lwd=2)
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts), type='l', col="ORANGE", lwd=2)
legend();
plot(x=maPearson_hist$mids,y=maPearson_hist$counts/sum(maPearson_hist$counts), type='l', col="RED", lwd=2, ylim=c(0,1));
lines(x=rsPearson_DESeq_hist$mids,y=rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts), type='l', col="BLUE", lwd=2);
lines(x=rsPearson_quant_hist$mids,y=rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts), type='l', col="Purple", lwd=2);
lines(x=rsPearson_Ubi_hist$mids,y=rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts), type='l', col="GREEN", lwd=2)
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts), type='l', col="BLACK", lwd=2)
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts), type='l', col="ORANGE", lwd=2)
plot(x=maPearson_hist$mids,y=maPearson_hist$counts/sum(maPearson_hist$counts), type='l', col="RED", lwd=2, ylim=c(0,0.2));
lines(x=rsPearson_DESeq_hist$mids,y=rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts), type='l', col="BLUE", lwd=2);
lines(x=rsPearson_quant_hist$mids,y=rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts), type='l', col="Purple", lwd=2);
lines(x=rsPearson_Ubi_hist$mids,y=rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts), type='l', col="GREEN", lwd=2)
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts), type='l', col="BLACK", lwd=2)
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts), type='l', col="ORANGE", lwd=2)
plot(x=maPearson_hist$mids,y=maPearson_hist$counts/sum(maPearson_hist$counts), type='l', col="RED", lwd=2, ylim=c(0,0.1));
lines(x=rsPearson_DESeq_hist$mids,y=rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts), type='l', col="BLUE", lwd=2);
lines(x=rsPearson_quant_hist$mids,y=rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts), type='l', col="Purple", lwd=2);
lines(x=rsPearson_Ubi_hist$mids,y=rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts), type='l', col="GREEN", lwd=2)
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts), type='l', col="BLACK", lwd=2)
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts), type='l', col="ORANGE", lwd=2)
plot(x=maPearson_hist$mids,y=maPearson_hist$counts/sum(maPearson_hist$counts), type='l', col="RED", lwd=2, ylim=c(0,0.08), xlim=c(-0.75,0.75));
lines(x=rsPearson_DESeq_hist$mids,y=rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts), type='l', col="BLUE", lwd=2);
lines(x=rsPearson_quant_hist$mids,y=rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts), type='l', col="Purple", lwd=2);
lines(x=rsPearson_Ubi_hist$mids,y=rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts), type='l', col="GREEN", lwd=2)
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts), type='l', col="BLACK", lwd=2)
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts), type='l', col="ORANGE", lwd=2)
plot(x=maPearson_hist$mids,y=maPearson_hist$counts/sum(maPearson_hist$counts), type='l', col="RED", lwd=2,
ylim=c(0,0.08), xlim=c(-0.75,0.75), xlab=PCC, ylab=density);
lines(x=rsPearson_DESeq_hist$mids,y=rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts), type='l', col="BLUE", lwd=2);
lines(x=rsPearson_quant_hist$mids,y=rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts), type='l', col="Purple", lwd=2);
lines(x=rsPearson_Ubi_hist$mids,y=rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts), type='l', col="GREEN", lwd=2)
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts), type='l', col="BLACK", lwd=2)
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts), type='l', col="ORANGE", lwd=2)
plot(x=maPearson_hist$mids,y=maPearson_hist$counts/sum(maPearson_hist$counts), type='l', col="RED", lwd=2,
ylim=c(0,0.08), xlim=c(-0.75,0.75), xlab="PCC", ylab="density");
lines(x=rsPearson_DESeq_hist$mids,y=rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts), type='l', col="BLUE", lwd=2);
lines(x=rsPearson_quant_hist$mids,y=rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts), type='l', col="Purple", lwd=2);
lines(x=rsPearson_Ubi_hist$mids,y=rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts), type='l', col="GREEN", lwd=2)
lines(x=rsPearson_raw_hist$mids,y=rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts), type='l', col="BLACK", lwd=2)
lines(x=rsPearson_RPKM_hist$mids,y=rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts), type='l', col="ORANGE", lwd=2)
maxy <- 0.08
lines(x=c(0,0),y=(0,maxy), col="Grey", type='s');
lines(x=c(0,0),y=(0,maxy), col="Grey", type='l');
lines(x=c(0,0),y=c(0,maxy), col="Grey", type='l');
source("ggplots2")
install.packages("ggplot")
source("ggplots2")
library("ggplots2")
library("ggplot2")
library("ggplot")
install.packages("ggplot2")
library("ggplot2")
ggplot(data=c(maPearson_hist$mids, maPearson_hist$counts)) + geom_density()
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts)) + geom_density();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC,y=counts)) + geom_density();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC)) + geom_density();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC));# + geom_density();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC));# + geom_density();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC)) + geom_line();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC, group=1)) + geom_line();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC, y=counts, group=1)) + geom_line();
ggplot(data=data.frame(PCC=maPearson_hist$mids, counts=maPearson_hist$counts), aes(x=PCC, y=counts/sum(maPearson_hist$counts), group=1)) + geom_line();
ggplot(data=data.frame(PCC=maPearson_hist$mids, density=maPearson_hist$counts/sum(maPearson_hist$counts)), aes(x=PCC, y=density, group=1)) + geom_line();
ggplot(data=data.frame(PCC=maPearson_hist$mids, density=maPearson_hist$counts/sum(maPearson_hist$counts)), aes(x=PCC, y=density, group=1)) +
geom_line(colour="red",size=2);
length(maPearson_hist$counts)
dim(maPearson_hist$counts)
maPearson_hist$counts
PCC_density_data <- data.frame(
PCC=c(maPearson_hist$mids, rsPearson_DESeq_hist$mids, rsPearson_quant_hist$mids, rsPearson_Ubi_hist$mids, rsPearson_raw_hist$mids, rsPearson_RPKM_hist$mids),
density=c(maPearson_hist$counts/sum(maPearson_hist$counts),rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts),rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts),rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts),rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts),rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts))
method=c(rep(x="microArray",times=length(maPearson_hist$counts)),rep(x="DESeq",times=length(rsPearson_DESeq$counts)),rep(x="quantile",times=length(rsPearson_quant$counts)),rep(x="Total Ubiquitous",times=length(rsPearson_Ubi$counts)),rep(x="raw",times=length(rsPearson_raw$counts)),rep(x="RPKM",times=length(rsPearson_RPKM$counts)));
PCC_density_data <- data.frame(
PCC=c(maPearson_hist$mids, rsPearson_DESeq_hist$mids, rsPearson_quant_hist$mids, rsPearson_Ubi_hist$mids, rsPearson_raw_hist$mids, rsPearson_RPKM_hist$mids),
density=c(maPearson_hist$counts/sum(maPearson_hist$counts),rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts),rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts),rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts),rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts),rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts))
method=c(rep(x="microArray",times=length(maPearson_hist$counts)),rep(x="DESeq",times=length(rsPearson_DESeq$counts)),rep(x="quantile",times=length(rsPearson_quant$counts)),rep(x="Total Ubiquitous",times=length(rsPearson_Ubi$counts)),rep(x="raw",times=length(rsPearson_raw$counts)),rep(x="RPKM",times=length(rsPearson_RPKM$counts))));
PCC_density_data <- data.frame(
PCC=c(
maPearson_hist$mids,
rsPearson_DESeq_hist$mids,
rsPearson_quant_hist$mids,
rsPearson_Ubi_hist$mids,
rsPearson_raw_hist$mids,
rsPearson_RPKM_hist$mids),
density=c(
maPearson_hist$counts/sum(maPearson_hist$counts),
rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts),
rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts),
rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts),
rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts),
rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts)),
method=c(
rep(x="microArray",times=length(maPearson_hist$counts)),
rep(x="DESeq",times=length(rsPearson_DESeq$counts)),
rep(x="quantile",times=length(rsPearson_quant$counts)),
rep(x="Total Ubiquitous",times=length(rsPearson_Ubi$counts)),
rep(x="raw",times=length(rsPearson_raw$counts)),
rep(x="RPKM",times=length(rsPearson_RPKM$counts))));
ty_data <- data.frame(
PCC=c(
maPearson_hist$mids,
rsPearson_DESeq_hist$mids,
rsPearson_quant_hist$mids,
rsPearson_Ubi_hist$mids,
rsPearson_raw_hist$mids,
rsPearson_RPKM_hist$mids),
density=c(
maPearson_hist$counts/sum(maPearson_hist$counts),
rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts),
rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts),
rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts),
rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts),
rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts)),
method=c(
rep(x="microArray",times=length(maPearson_hist$counts)),
rep(x="DESeq",times=length(rsPearson_DESeq_hist$counts)),
rep(x="quantile",times=length(rsPearson_quant_hist$counts)),
rep(x="Total Ubiquitous",times=length(rsPearson_Ubi_hist$counts)),
rep(x="raw",times=length(rsPearson_raw_hist$counts)),
rep(x="RPKM",times=le
)))
PCC_density_data <- data.frame(
PCC=c(
maPearson_hist$mids,
rsPearson_DESeq_hist$mids,
rsPearson_quant_hist$mids,
rsPearson_Ubi_hist$mids,
rsPearson_raw_hist$mids,
rsPearson_RPKM_hist$mids),
density=c(
maPearson_hist$counts/sum(maPearson_hist$counts),
rsPearson_DESeq_hist$counts/sum(rsPearson_DESeq_hist$counts),
rsPearson_quant_hist$counts/sum(rsPearson_quant_hist$counts),
rsPearson_Ubi_hist$counts/sum(rsPearson_Ubi_hist$counts),
rsPearson_raw_hist$counts/sum(rsPearson_raw_hist$counts),
rsPearson_RPKM_hist$counts/sum(rsPearson_RPKM_hist$counts)),
method=c(
rep(x="microArray",times=length(maPearson_hist$counts)),
rep(x="DESeq",times=length(rsPearson_DESeq_hist$counts)),
rep(x="quantile",times=length(rsPearson_quant_hist$counts)),
rep(x="Total Ubiquitous",times=length(rsPearson_Ubi_hist$counts)),
rep(x="raw",times=length(rsPearson_raw_hist$counts)),
rep(x="RPKM",times=length(rsPearson_RPKM_hist$counts))));
head(PCC_density_data)
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method)) +
geom_line(size=1.5);
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1.5);
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1.5, group="Total Ubiquitous");
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1, group="Total Ubiquitous");
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1, aes(linetype=method));
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1, aes(linetype=method)) +
title(main="PCC density comparison");
ggplot(data=PCC_density_data, title="PCC density comparison", aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1, aes(linetype=method));
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1, aes(linetype=method)) +
ggtitle("PCC density comparison");
png(filename="RNASeq total ubiquitous normalization check.png");
ggplot(data=PCC_density_data, aes(x=PCC, y=density, group=method, colour=method)) +
geom_line(size=1, aes(linetype=method)) +
ggtitle("PCC density comparison");
dev.off();
dev.off();
dev.off();
setwd("C:/Users/Student/My Research/microArray v RNA Seq/");
getwd
getwd()
source("http://bioconductor.org/biocLite.R");
print("Importing data files.");
maDir <- "Data/BRCA/Batch 47/Expression-Genes/UNC__AgilentG4502A_07_3/Level_3/";
rsDir <- "Data/BRCA/Batch 47/RNASeqV2/UNC__IlluminaHiSeq_RNASeqV2/Level_3/";
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE);
setwd("..")
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE);
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE,fill = TRUE);
View(metaData)
metaData <- cbind(metaData, control=(substr(x=metaData[,5],start=14,stop=16)=='11'));#addControl bool
metaData[,6] <- gsub(pattern="-",replacement=".", x=metaData[,6]);#replace '-' with '.' to make mapping easier later
maControlFiles <- paste(sep='', maDir ,as.character(metaData[metaData[,"control"] & metaData[,"PlatformType"]=="Expression-Genes" ,"FileName"]));
View(metaData)
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE,sep="/t");
metaData <- read.table(file="Data/BRCA/Batch 47/file_manifest.txt",header=TRUE,sep="\t");
metaData <- cbind(metaData, control=(substr(x=metaData[,5],start=14,stop=16)=='11'));#addControl bool
metaData[,6] <- gsub(pattern="-",replacement=".", x=metaData[,6]);#replace '-' with '.' to make mapping easier later
maControlFiles <- paste(sep='', maDir ,as.character(metaData[metaData[,"control"] & metaData[,"PlatformType"]=="Expression-Genes" ,"FileName"]));
maControlFiles <- paste(sep='', maDir ,as.character(metaData[metaData[,"control"] & metaData[,"Platform Type"]=="Expression-Genes" ,"File Name"]));
View(metaData)
maControlFiles <- paste(sep='', maDir ,as.character(metaData[metaData[,"control"] & metaData[,"Platform.Type"]=="Expression-Genes" ,"File.Name"]));
maCancerFiles <- paste(sep='', maDir ,as.character(metaData[!metaData[,"control"] & metaData[,"Platform.Type"]=="Expression-Genes" ,"File.Name"]));
rsControlFiles <- paste(sep='', rsDir ,as.character(metaData[metaData[,"control"] & metaData[,"Platform.Type"]=="RNASeqV2" & grepl(x=metaData[,"File.Name"], pattern="*.rsem.genes.results") ,"File Name"]));
rsCancerFiles <- paste(sep='', rsDir ,as.character(metaData[!metaData[,"control"] & metaData[,"Platform.Type"]=="RNASeqV2" & grepl(x=metaData[,"File.Name"], pattern="*.rsem.genes.results") ,"File Name"]));
help(commandArgs)
commandArgs(trailingOnly = TRUE);
is.null(commandArgs(trailingOnly = TRUE));
is.na(commandArgs(trailingOnly = TRUE));
commandArgs(trailingOnly = TRUE);
commandArgs(trailingOnly = TRUE)=='';
commandArgs(trailingOnly = TRUE)==character(null);
commandArgs(trailingOnly = TRUE)==character(Null);
commandArgs(trailingOnly = TRUE)==character(NULL);
commandArgs(trailingOnly = TRUE)==character(length=0);
c()
logical()
commandArgs(trailingOnly = TRUE)==logical();
commandArgs(trailingOnly = TRUE)!=logical();
commandArgs(trailingOnly = TRUE);
help(q)
quit();
quit();
