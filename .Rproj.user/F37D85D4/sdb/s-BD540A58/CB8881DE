{
    "contents" : "# Display the current working directory\ngetwd();\n# If necessary, change the path below to the directory where the data files are stored.\n# \".\" means current directory. On Windows use a forward slash / instead of the usual \\.\nworkingDir = \"C:/Users/Student/My Research/microArray v RNA Seq/Data/WGCNA Tutorial Datasets/\";\nsetwd(workingDir);\n# Load the WGCNA package\nsource(\"http://bioconductor.org/biocLite.R\")\nbiocLite(\"impute\")\nbiocLite(\"WGCNA\")\nlibrary(WGCNA)\n# The following setting is important, do not omit.\noptions(stringsAsFactors = FALSE);\n# Allow multi-threading within WGCNA.\n# Caution: skip this line if you run RStudio or other third-party R environments.\n# See note above.\n#enableWGCNAThreads()\n# Load the data saved in the first part\nlnames = load(file = \"Consensus-dataInput.RData\");\n# The variable lnames contains the names of loaded variables.\nlnames\n# Get the number of sets in the multiExpr structure.\nnSets = checkSets(multiExpr)$nSets\n\n#select beta for scale-free networks\n# Choose a set of soft-thresholding powers\npowers = c(seq(4,10,by=1), seq(12,20, by=2));\n# Initialize a list to hold the results of scale-free analysis\npowerTables = vector(mode = \"list\", length = nSets);\n# Call the network topology analysis function for each set in turn\nfor (set in 1:nSets)\n  powerTables[[set]] = list(data = pickSoftThreshold(multiExpr[[set]]$data, powerVector=powers, verbose = 2)[[2]]);\ncollectGarbage();\n# Plot the results:\ncolors = c(\"black\", \"red\")\n# Will plot these columns of the returned scale free analysis tables\nplotCols = c(2,5,6,7)\ncolNames = c(\"Scale Free Topology Model Fit\", \"Mean connectivity\", \"Median connectivity\",\n             \"Max connectivity\");\n# Get the minima and maxima of the plotted points\nylim = matrix(NA, nrow = 2, ncol = 4);\nfor (set in 1:nSets)\n{\n  for (col in 1:length(plotCols))\n  {\n    ylim[1, col] = min(ylim[1, col], powerTables[[set]]$data[, plotCols[col]], na.rm = TRUE);\n    ylim[2, col] = max(ylim[2, col], powerTables[[set]]$data[, plotCols[col]], na.rm = TRUE);\n  }\n}\n# Plot the quantities in the chosen columns vs. the soft thresholding power\nsizeGrWindow(8, 6)\npar(mfcol = c(2,2));\npar(mar = c(4.2, 4.2 , 2.2, 0.5))\ncex1 = 0.7;\nfor (col in 1:length(plotCols)) for (set in 1:nSets)\n{\n  if (set==1)\n  {\n    plot(powerTables[[set]]$data[,1], -sign(powerTables[[set]]$data[,3])*powerTables[[set]]$data[,2],\n         xlab=\"Soft Threshold (power)\",ylab=colNames[col],type=\"n\", ylim = ylim[, col],\n         main = colNames[col]);\n    addGrid();\n  }\n  if (col==1)\n  {\n    text(powerTables[[set]]$data[,1], -sign(powerTables[[set]]$data[,3])*powerTables[[set]]$data[,2],\n         labels=powers,cex=cex1,col=colors[set]);\n  } else\n    text(powerTables[[set]]$data[,1], powerTables[[set]]$data[,plotCols[col]],\n         labels=powers,cex=cex1,col=colors[set]);\n  if (col==1)\n  {\n    legend(\"bottomright\", legend = setLabels, col = colors, pch = 20) ;\n  } else\n    legend(\"topright\", legend = setLabels, col = colors, pch = 20) ;\n}\n\n#Network construction\nnet = blockwiseConsensusModules(\n  multiExpr, power = 6, minModuleSize = 30, deepSplit = 2,\n  pamRespectsDendro = FALSE,\n  mergeCutHeight = 0.25, numericLabels = TRUE,\n  minKMEtoStay = 0,\n  saveTOMs = TRUE, verbose = 5)\n\n",
    "created" : 1412473212499.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2399513346",
    "id" : "CB8881DE",
    "lastKnownWriteTime" : 1407526460,
    "path" : "C:/Users/Student/My Research/microArray v RNA Seq/CoexpressionNetworkRProject/WGCNATutorialScript_NetworkConstruction.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}